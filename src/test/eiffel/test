#!/bin/bash

root=$(dirname $(pwd))
root=$(dirname $root)

generate_ace_file() {
        cat <<EOF
system "test"

root
    $class: make

default
    assertion(require)
    assertion_flat_check(yes)
    debug(no)
    trace(yes)
    no_style_warning(no)
    no_warning(no)
    verbose(no)
    manifest_string_trace(no)
    high_memory_compiler(yes)
    profile(no)
    relax(yes)

cluster
    liberty: "\${path_liberty}/src/loadpath.se"
        option
            debug(yes): ABSTRACT_STRING, FIXED_STRING, NATIVELY_STORED_STRING, STRING
            --debug("parse"): DESCENDING_PARSER, PARSE_TERMINAL, PARSE_NT_NODE, PARSE_NON_TERMINAL
            --debug("parse/eiffel/build"): EIFFEL_GRAMMAR
            assertion(no): DESCENDING_PARSER, PARSE_TERMINAL, PARSE_NT_NODE, PARSE_NON_TERMINAL, EIFFEL_GRAMMAR, LOGGER, LOGGING, LOG_INTERNAL_CONF
        end

    main: "$root/main/eiffel/loadpath.se"
        default
            assertion(all)
            debug(yes)
        option
            assertion(no): MIXUP_GRAMMAR
            debug(no): MIXUP_GRAMMAR, MIXUP_PARSER
        end

    test: "$root/test/eiffel/net/cadrian/mixup/loadpath.se"
        default
            assertion(no)
            debug(yes)
        end

generate
    no_strip(yes)
    clean(no)
    c_compiler_options: "-g -pipe"
    split("by_type")

end
EOF
}

cd $(dirname $0)

export class

case x$1 in
    x[0-9])
        class=TEST_MIXUP_GRAMMAR0$1
        ;;
    xlily*)
        class=TEST_LILYPOND_PLAYER
        ;;
    *)
        echo "Unknown test: $1" >&2
        exit 1
        ;;
esac
shift

if [ \! -d .test/$class ]; then
    echo "Initializing..."
    mkdir -p .test/$class
    ln -s $(pwd)/log.rc .test/$class/
fi


cd .test/$class

if [ x$1 == xclean ]; then
    echo "Cleaning..."
    se clean $class
    shift
    generate_ace_file > test.ace
fi

test -e test.ace || generate_ace_file > test.ace

echo "Compiling..."
se c test.ace || exit 1

echo "Executing..."
test -e test.log && truncate -s 0 test.log
if [ x$1 == xgdb ]; then
    gdb ./test
else
    ./test
fi
test -e test.log && less test.log

echo "Done."
